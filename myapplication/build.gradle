apply plugin: 'com.android.application'
def configs = rootProject.ext.android
android {
    compileSdkVersion configs.compileSdkVersion
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion configs.minSdkVersion
        targetSdkVersion configs.targetSdkVersion
        versionCode configs.versionCode
        versionName configs.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi-v7a'
    }
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation project(':library')
    implementation(name: 'libuvccamera-release', ext: 'aar') {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
    }
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'android.arch.lifecycle:extensions:1.0.0'
    implementation 'android.arch.lifecycle:reactivestreams:1.0.0'
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0"
}
